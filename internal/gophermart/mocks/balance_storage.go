// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/belamov/ypgo-gophermart/internal/gophermart/storage (interfaces: BalanceStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBalanceStorage is a mock of BalanceStorage interface.
type MockBalanceStorage struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceStorageMockRecorder
}

// MockBalanceStorageMockRecorder is the mock recorder for MockBalanceStorage.
type MockBalanceStorageMockRecorder struct {
	mock *MockBalanceStorage
}

// NewMockBalanceStorage creates a new mock instance.
func NewMockBalanceStorage(ctrl *gomock.Controller) *MockBalanceStorage {
	mock := &MockBalanceStorage{ctrl: ctrl}
	mock.recorder = &MockBalanceStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceStorage) EXPECT() *MockBalanceStorageMockRecorder {
	return m.recorder
}

// AddWithdraw mocks base method.
func (m *MockBalanceStorage) AddWithdraw(arg0, arg1 int, arg2 float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddWithdraw", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddWithdraw indicates an expected call of AddWithdraw.
func (mr *MockBalanceStorageMockRecorder) AddWithdraw(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddWithdraw", reflect.TypeOf((*MockBalanceStorage)(nil).AddWithdraw), arg0, arg1, arg2)
}

// GetTotalAccrual mocks base method.
func (m *MockBalanceStorage) GetTotalAccrual(arg0 int) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalAccrual", arg0)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTotalAccrual indicates an expected call of GetTotalAccrual.
func (mr *MockBalanceStorageMockRecorder) GetTotalAccrual(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalAccrual", reflect.TypeOf((*MockBalanceStorage)(nil).GetTotalAccrual), arg0)
}

// GetTotalWithdraws mocks base method.
func (m *MockBalanceStorage) GetTotalWithdraws(arg0 int) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalWithdraws", arg0)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTotalWithdraws indicates an expected call of GetTotalWithdraws.
func (mr *MockBalanceStorageMockRecorder) GetTotalWithdraws(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalWithdraws", reflect.TypeOf((*MockBalanceStorage)(nil).GetTotalWithdraws), arg0)
}
