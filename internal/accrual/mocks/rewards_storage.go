// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/belamov/ypgo-gophermart/internal/accrual/storage (interfaces: RewardsStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/belamov/ypgo-gophermart/internal/accrual/models"
	gomock "github.com/golang/mock/gomock"
)

// MockRewardsStorage is a mock of RewardsStorage interface.
type MockRewardsStorage struct {
	ctrl     *gomock.Controller
	recorder *MockRewardsStorageMockRecorder
}

// MockRewardsStorageMockRecorder is the mock recorder for MockRewardsStorage.
type MockRewardsStorageMockRecorder struct {
	mock *MockRewardsStorage
}

// NewMockRewardsStorage creates a new mock instance.
func NewMockRewardsStorage(ctrl *gomock.Controller) *MockRewardsStorage {
	mock := &MockRewardsStorage{ctrl: ctrl}
	mock.recorder = &MockRewardsStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRewardsStorage) EXPECT() *MockRewardsStorageMockRecorder {
	return m.recorder
}

// CreateNew mocks base method.
func (m *MockRewardsStorage) CreateNew(arg0 models.RewardCondition) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNew", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateNew indicates an expected call of CreateNew.
func (mr *MockRewardsStorageMockRecorder) CreateNew(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNew", reflect.TypeOf((*MockRewardsStorage)(nil).CreateNew), arg0)
}

// Exists mocks base method.
func (m *MockRewardsStorage) Exists(arg0 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Exists", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Exists indicates an expected call of Exists.
func (mr *MockRewardsStorageMockRecorder) Exists(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Exists", reflect.TypeOf((*MockRewardsStorage)(nil).Exists), arg0)
}
