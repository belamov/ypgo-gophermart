// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/belamov/ypgo-gophermart/internal/accrual/storage (interfaces: RewardsStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/belamov/ypgo-gophermart/internal/accrual/models"
	gomock "github.com/golang/mock/gomock"
)

// MockRewardsStorage is a mock of RewardsStorage interface.
type MockRewardsStorage struct {
	ctrl     *gomock.Controller
	recorder *MockRewardsStorageMockRecorder
}

// MockRewardsStorageMockRecorder is the mock recorder for MockRewardsStorage.
type MockRewardsStorageMockRecorder struct {
	mock *MockRewardsStorage
}

// NewMockRewardsStorage creates a new mock instance.
func NewMockRewardsStorage(ctrl *gomock.Controller) *MockRewardsStorage {
	mock := &MockRewardsStorage{ctrl: ctrl}
	mock.recorder = &MockRewardsStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRewardsStorage) EXPECT() *MockRewardsStorageMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockRewardsStorage) Save(arg0 models.RewardCondition) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockRewardsStorageMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockRewardsStorage)(nil).Save), arg0)
}
